{
    "data" : [
        "> ",
        "mov",
        "          [,1]       [,2]      [,3]      [,4]      [,5]\n[1,] 0.4024993 0.01349544 0.1208929 0.2942321 0.1688803\n[2,] 0.3370713 0.01955778 0.1331820 0.3241415 0.1860474\n[3,] 0.3249422 0.01433230 0.1688953 0.3124776 0.1793527\n[4,] 0.3071060 0.01354560 0.1213422 0.3884982 0.1695080\n[5,] 0.3198003 0.01410551 0.1263579 0.3075329 0.2322034\n",
        "> ",
        "idist<-rep(1/nareas)",
        "> ",
        "idist<-rep(1/nareas)",
        "> ",
        "idist*mov",
        "           [,1]        [,2]       [,3]       [,4]       [,5]\n[1,] 0.08049986 0.002699088 0.02417858 0.05884641 0.03377606\n[2,] 0.06741427 0.003911557 0.02663639 0.06482830 0.03720948\n[3,] 0.06498843 0.002866460 0.03377906 0.06249551 0.03587054\n[4,] 0.06142120 0.002709120 0.02426844 0.07769964 0.03390159\n[5,] 0.06396005 0.002821101 0.02527158 0.06150658 0.04644068\n",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "  grav<-array(NA,c(nareas,nareas))",
        "> ",
        "  grav[,1]<-0",
        "> ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "> ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "> ",
        "  mov<-exp(grav)",
        "> ",
        "  mov<-mov/apply(mov,1,sum)",
        "> ",
        "  idist<-rep(1/nareas)",
        "> ",
        "  for(i in 1:20)idist<-apply(idist*mov,2,sum)",
        "> ",
        "idist",
        "[1] 0.34503675 0.01381435 0.12836898 0.33057272 0.18220720\n",
        "> ",
        "fracs",
        "[1] 0.35838876 0.01408068 0.11971459 0.33824792 0.16956805\n",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "  ",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas)",
        "+ ",
        "  for(i in 1:20)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "  ",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "  ",
        "+ ",
        "}",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "       fracs      idist\n1 0.35838876 0.34503675\n2 0.01408068 0.01381435\n3 0.11971459 0.12836898\n4 0.33824792 0.33057272\n5 0.16956805 0.18220720\n[1] \"muprob = 0.2  modeled muprob = 0.2423\"\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "fracs=runif(5)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "      fracs     idist\n1 0.1407849 0.1521340\n2 0.1927624 0.1985275\n3 0.1647097 0.1744381\n4 0.3147138 0.2811179\n5 0.1870291 0.1937824\n[1] \"muprob = 0.2  modeled muprob = 0.1548\"\n",
        "> ",
        "log(fracs)",
        "[1] -1.960522 -1.646297 -1.803571 -1.156092 -1.676491\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas)",
        "+ ",
        "  for(i in 1:20)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "fracs=runif(5)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "      fracs     idist\n1 0.1950955 0.2032138\n2 0.1074840 0.1175698\n3 0.1351500 0.1465650\n4 0.3403866 0.3070203\n5 0.2218839 0.2256310\n[1] \"muprob = 0.2  modeled muprob = 0.1935\"\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas)",
        "+ ",
        "  for(i in 1:20)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "       fracs      idist\n1 0.27263160 0.26591764\n2 0.25503048 0.25259149\n3 0.03973532 0.04106760\n4 0.25522809 0.25274412\n5 0.15526250 0.16534791\n6 0.02211202 0.02233124\n[1] \"muprob = 0.2  modeled muprob = 0.2299\"\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas)",
        "+ ",
        "  for(i in 1:20)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "       fracs     idist\n1 0.12032837 0.1336987\n2 0.19102905 0.1951790\n3 0.08989923 0.1022579\n4 0.13344869 0.1463189\n5 0.12125470 0.1346087\n6 0.34403996 0.2879368\n[1] \"muprob = 0.2  modeled muprob = 0.1611\"\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas,nareas)",
        "+ ",
        "  for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "       fracs      idist\n1 0.21948978 0.22108186\n2 0.16648518 0.17567126\n3 0.04146822 0.04406121\n4 0.18853881 0.19537325\n5 0.06961833 0.07543409\n6 0.31439969 0.28837834\n[1] \"muprob = 0.2  modeled muprob = 0.2198\"\n",
        "> ",
        "opt",
        "$par\n  log_visc   log_grav   log_grav   log_grav   log_grav   log_grav \n 0.3618177 -0.2130012 -1.5417493 -0.1141441 -1.0178129  0.2420735 \n\n$objective\n[1] -58.03981\n\n$convergence\n[1] 0\n\n$iterations\n[1] 111\n\n$evaluations\nfunction gradient \n     143      112 \n\n$message\n[1] \"relative convergence (4)\"\n\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,muprob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  nareas<-length(fracs)",
        "+ ",
        "  grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "  grav[,1]<-0",
        "+ ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "  for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "  mov<-exp(grav)",
        "+ ",
        "  mov<-mov/apply(mov,1,sum)",
        "+ ",
        "  idist<-rep(1/nareas,nareas)",
        "+ ",
        "  for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "  print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "  print(paste(\"muprob =\",muprob,\" modeled muprob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "muprob=0.2",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, muprob = muprob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,muprob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "      fracs      idist\n1 0.2553128 0.24759652\n2 0.1387351 0.14667279\n3 0.2832020 0.26777122\n4 0.1438772 0.15177075\n5 0.1603332 0.16767051\n6 0.0185397 0.01851821\n[1] \"muprob = 0.2  modeled muprob = 0.2351\"\n",
        "> ",
        "log_grav=opt$par[2:nareas]",
        "> ",
        "log_visc=opt$par[1]",
        "> ",
        "log_grav",
        "   log_grav    log_grav    log_grav    log_grav    log_grav \n-0.47619990  0.06956824 -0.44458557 -0.35280039 -2.47438128 \n",
        "> ",
        "log_visc",
        " log_visc \n0.4533881 \n",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "  grav<-array(NA,c(nareas,nareas))",
        "> ",
        "  grav[,1]<-0",
        "> ",
        "  for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "> ",
        "grav",
        "     [,1]       [,2]       [,3]       [,4]       [,5]      [,6]\n[1,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[2,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[3,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[4,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[5,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[6,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n",
        "> ",
        "log_visc",
        " log_visc \n0.4533881 \n",
        "> ",
        "for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "> ",
        "grav",
        "          [,1]        [,2]       [,3]         [,4]       [,5]      [,6]\n[1,] 0.4533881 -0.47619990 0.06956824 -0.444585574 -0.3528004 -2.474381\n[2,] 0.0000000 -0.02281176 0.06956824 -0.444585574 -0.3528004 -2.474381\n[3,] 0.0000000 -0.47619990 0.52295639 -0.444585574 -0.3528004 -2.474381\n[4,] 0.0000000 -0.47619990 0.06956824  0.008802572 -0.3528004 -2.474381\n[5,] 0.0000000 -0.47619990 0.06956824 -0.444585574  0.1005878 -2.474381\n[6,] 0.0000000 -0.47619990 0.06956824 -0.444585574 -0.3528004 -2.020993\n",
        "> ",
        "mov<-exp(grav)",
        "> ",
        "apply(mov,1,sum)",
        "[1] 4.694842 4.477514 4.736169 4.488958 4.524310 4.169516\n",
        "> ",
        "mov",
        "         [,1]      [,2]     [,3]      [,4]      [,5]       [,6]\n[1,] 1.573635 0.6211393 1.072045 0.6410899 0.7027174 0.08421508\n[2,] 1.000000 0.9774465 1.072045 0.6410899 0.7027174 0.08421508\n[3,] 1.000000 0.6211393 1.687008 0.6410899 0.7027174 0.08421508\n[4,] 1.000000 0.6211393 1.072045 1.0088414 0.7027174 0.08421508\n[5,] 1.000000 0.6211393 1.072045 0.6410899 1.1058207 0.08421508\n[6,] 1.000000 0.6211393 1.072045 0.6410899 0.7027174 0.13252379\n",
        "> ",
        "idist<-rep(1/nareas,nareas)",
        "> ",
        "idist",
        "[1] 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667 0.1666667\n",
        "> ",
        "mov<-mov/apply(mov,1,sum)",
        "> ",
        "  idist<-rep(1/nareas,nareas)",
        "> ",
        "  for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "> ",
        "idist",
        "[1] 0.24759652 0.14667279 0.26777122 0.15177075 0.16767051 0.01851821\n",
        "> ",
        "fracs",
        "[1] 0.2553128 0.1387351 0.2832020 0.1438772 0.1603332 0.0185397\n",
        "> ",
        "mov[cbind(1:nareas,1:nareas)]",
        "[1] 0.33518379 0.21830115 0.35619666 0.22473842 0.24441752 0.03178398\n",
        "> ",
        "mov",
        "          [,1]      [,2]      [,3]      [,4]      [,5]       [,6]\n[1,] 0.3351838 0.1323025 0.2283453 0.1365520 0.1496786 0.01793779\n[2,] 0.2233382 0.2183011 0.2394287 0.1431799 0.1569437 0.01880845\n[3,] 0.2111411 0.1311480 0.3561967 0.1353604 0.1483725 0.01778126\n[4,] 0.2227688 0.1383705 0.2388183 0.2247384 0.1565435 0.01876049\n[5,] 0.2210282 0.1372893 0.2369522 0.1416989 0.2444175 0.01861390\n[6,] 0.2398360 0.1489716 0.2571150 0.1537564 0.1685369 0.03178398\n",
        "> ",
        "testgravpars<-function(fracs,prob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  if(length(prob)==1){ # if the user is specifying mean probability of staying",
        "+ ",
        "    nareas<-length(fracs)",
        "+ ",
        "    grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "    grav[,1]<-0",
        "+ ",
        "    for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "    mov<-exp(grav)",
        "+ ",
        "    mov<-mov/apply(mov,1,sum)",
        "+ ",
        "    idist<-rep(1/nareas,nareas)",
        "+ ",
        "    for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "  ",
        "+ ",
        "    print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "    print(paste(\"prob =\",prob,\" modeled prob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "  }else if(length(prob))",
        "+ ",
        "  }  ",
        "Error: unexpected '}' in:\n\"  }else if(length(prob))\n  }\"\n",
        "> ",
        "",
        "> ",
        "}",
        "Error: unexpected '}' in \"}\"\n",
        "> ",
        "testgravpars<-function(fracs,prob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  if(length(prob)==1){ # if the user is specifying mean probability of staying",
        "+ ",
        "    nareas<-length(fracs)",
        "+ ",
        "    grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "    grav[,1]<-0",
        "+ ",
        "    for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "    mov<-exp(grav)",
        "+ ",
        "    mov<-mov/apply(mov,1,sum)",
        "+ ",
        "    idist<-rep(1/nareas,nareas)",
        "+ ",
        "    for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "  ",
        "+ ",
        "    print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "    print(paste(\"prob =\",prob,\" modeled prob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "  }else if(length(prob)){",
        "+ ",
        "  }  ",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "fracs",
        "[1] 0.04812821 0.28737745 0.08180913 0.03416248 0.32015682 0.22836591\n",
        "> ",
        "prob=0.4",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "    grav<-array(NA,c(nareas,nareas))",
        "> ",
        "grav",
        "     [,1] [,2] [,3] [,4] [,5] [,6]\n[1,]   NA   NA   NA   NA   NA   NA\n[2,]   NA   NA   NA   NA   NA   NA\n[3,]   NA   NA   NA   NA   NA   NA\n[4,]   NA   NA   NA   NA   NA   NA\n[5,]   NA   NA   NA   NA   NA   NA\n[6,]   NA   NA   NA   NA   NA   NA\n",
        "> ",
        "grav[,1]<-0",
        "> ",
        "grav",
        "     [,1] [,2] [,3] [,4] [,5] [,6]\n[1,]    0   NA   NA   NA   NA   NA\n[2,]    0   NA   NA   NA   NA   NA\n[3,]    0   NA   NA   NA   NA   NA\n[4,]    0   NA   NA   NA   NA   NA\n[5,]    0   NA   NA   NA   NA   NA\n[6,]    0   NA   NA   NA   NA   NA\n",
        "> ",
        "for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "> ",
        "grav",
        "     [,1]       [,2]       [,3]       [,4]       [,5]      [,6]\n[1,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[2,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[3,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[4,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[5,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n[6,]    0 -0.4761999 0.06956824 -0.4445856 -0.3528004 -2.474381\n",
        "> ",
        "for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "> ",
        "grav",
        "          [,1]        [,2]       [,3]         [,4]       [,5]      [,6]\n[1,] 0.4533881 -0.47619990 0.06956824 -0.444585574 -0.3528004 -2.474381\n[2,] 0.0000000 -0.02281176 0.06956824 -0.444585574 -0.3528004 -2.474381\n[3,] 0.0000000 -0.47619990 0.52295639 -0.444585574 -0.3528004 -2.474381\n[4,] 0.0000000 -0.47619990 0.06956824  0.008802572 -0.3528004 -2.474381\n[5,] 0.0000000 -0.47619990 0.06956824 -0.444585574  0.1005878 -2.474381\n[6,] 0.0000000 -0.47619990 0.06956824 -0.444585574 -0.3528004 -2.020993\n",
        "> ",
        "mov<-exp(grav)",
        "> ",
        "    mov<-mov/apply(mov,1,sum)",
        "> ",
        "mov",
        "          [,1]      [,2]      [,3]      [,4]      [,5]       [,6]\n[1,] 0.3351838 0.1323025 0.2283453 0.1365520 0.1496786 0.01793779\n[2,] 0.2233382 0.2183011 0.2394287 0.1431799 0.1569437 0.01880845\n[3,] 0.2111411 0.1311480 0.3561967 0.1353604 0.1483725 0.01778126\n[4,] 0.2227688 0.1383705 0.2388183 0.2247384 0.1565435 0.01876049\n[5,] 0.2210282 0.1372893 0.2369522 0.1416989 0.2444175 0.01861390\n[6,] 0.2398360 0.1489716 0.2571150 0.1537564 0.1685369 0.03178398\n",
        "> ",
        "idist<-rep(1/nareas,nareas)",
        "> ",
        "    for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "> ",
        "idist",
        "[1] 0.24759652 0.14667279 0.26777122 0.15177075 0.16767051 0.01851821\n\nRestarting R session...\n\n",
        "> ",
        "library(MSEtool)",
        "\nAttaching package: ‘MSEtool’\n\n",
        "The following objects are masked from ‘package:DLMtool’:\n\n    fetch.file.names, getBH, getGpars, iSCAM2Data, iSCAMcomps, iSCAMinds, LinInterp, load.iscam.files,\n    negcorlogspace, optBH, read.control.file, read.data.file, read.mcmc, read.par.file,\n    read.projection.file, read.report.file, SRopt, SS2Data\n\n",
        "Warning message:\n",
        "package ‘TMB’ was built under R version 3.4.3 \n",
        "> ",
        "library(MSEtool)",
        "> ",
        "library(DLMtool)",
        "> ",
        "library(TMB)",
        "> ",
        "",
        "> ",
        "",
        "> ",
        "testgravpars<-function(fracs,prob,log_grav,log_visc){",
        "+ ",
        "",
        "+ ",
        "  if(length(prob)==1){ # if the user is specifying mean probability of staying",
        "+ ",
        "    nareas<-length(fracs)",
        "+ ",
        "    grav<-array(NA,c(nareas,nareas))",
        "+ ",
        "    grav[,1]<-0",
        "+ ",
        "    for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "+ ",
        "    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "+ ",
        "    mov<-exp(grav)",
        "+ ",
        "    mov<-mov/apply(mov,1,sum)",
        "+ ",
        "    idist<-rep(1/nareas,nareas)",
        "+ ",
        "    for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "+ ",
        "",
        "+ ",
        "    print(data.frame(fracs=fracs,idist=idist))",
        "+ ",
        "    print(paste(\"prob =\",prob,\" modeled prob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))",
        "+ ",
        "  }else if(length(prob)){",
        "+ ",
        "  }",
        "+ ",
        "",
        "+ ",
        "}",
        "> ",
        "nareas<-6",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "prob=0.4",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, prob = prob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "       fracs      idist\n1 0.17772955 0.17908939\n2 0.08577739 0.09796638\n3 0.19769935 0.19377245\n4 0.23291985 0.21794123\n5 0.09753012 0.10993775\n6 0.20834373 0.20129280\n[1] \"prob = 0.4  modeled prob = 0.4162\"\n",
        "> ",
        "nareas<-50",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "prob=0.4",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, prob = prob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr)",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "         fracs       idist\n1  0.006443650 0.010755259\n2  0.008102245 0.010836560\n3  0.002664576 0.004573099\n4  0.001017816 0.003067136\n5  0.035764156 0.031646445\n6  0.035705568 0.031585146\n7  0.038238190 0.032958138\n8  0.042557024 0.035240348\n9  0.029870787 0.028159078\n10 0.038977786 0.033380304\n11 0.005127575 0.007426938\n12 0.026282152 0.025921948\n13 0.012083102 0.014995251\n14 0.005864146 0.008305008\n15 0.001269813 0.003263792\n16 0.010921099 0.013797860\n17 0.033120690 0.030110481\n18 0.006523486 0.009066947",
        "\n19 0.010695877 0.013590533\n20 0.030913478 0.028812535\n21 0.019125032 0.020800687\n22 0.020491516 0.021940918\n23 0.017764048 0.019842466\n24 0.027586367 0.026731047\n25 0.017200747 0.019430520\n26 0.006639183 0.009198264\n27 0.006315380 0.008829157\n28 0.011737081 0.014678058\n29 0.010227739 0.012999650\n30 0.015360889 0.017770920\n31 0.011197269 0.014067071\n32 0.037472904 0.032572022\n33 0.002832494 0.004752071\n34 0.037348505 0.032484729\n35 0.012541503 0.015321352\n36 0.008503195 0.011285192\n37 0.013625520 0.016203072",
        "\n38 0.028489986 0.027342411\n39 0.033032924 0.030078707\n40 0.019214871 0.020908969\n41 0.040758408 0.034318021\n42 0.020294588 0.021692368\n43 0.043232329 0.035584798\n44 0.044981222 0.036459728\n45 0.001526305 0.003477328\n46 0.014545420 0.017143975\n47 0.015416346 0.017892580\n48 0.025860584 0.025602492\n49 0.025781832 0.025580542\n50 0.028752598 0.027518074\n[1] \"prob = 0.4  modeled prob = 0.3012\"\n",
        "> ",
        "opt",
        "$par\n    log_visc     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 3.106378178  0.006205289 -0.737370261 -1.101211733  0.834203619  0.832802647  0.863472310  0.911406639 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 0.749235751  0.872614961 -0.311547270  0.688242107  0.268713844 -0.216219106 -1.043924296  0.202417086 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav ",
        "    log_grav \n 0.798147140 -0.142121559  0.190284322  0.766027939  0.522964740  0.563456957  0.486955999  0.710962200 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 0.470869781 -0.130050022 -0.164482198  0.251745283  0.154535749  0.401941187  0.217870087  0.854994496 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n-0.702984887  0.853062176  0.285744385  0.039539014  0.329829117  0.727622680 ",
        " 0.797379567  0.526916160 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 0.892466340  0.554835373  0.918337776  0.935610252 -0.985750273  0.373996685  0.407235498  0.679050963 \n    log_grav     log_grav \n 0.678414687  0.732332319 \n\n$objective\n[1] -83.28417\n\n$convergence\n[1] 1\n\n$iterations\n[1] 150\n\n$evaluations\nfunction gradient \n     167      151 \n\n$message\n[1] \"iteration limit reached without convergence (10)\"\n\n",
        "> ",
        "?nlminb",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr,control=list(iter.max=1000))",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "         fracs       idist\n1  0.006443650 0.010430201\n2  0.008102245 0.011026748\n3  0.002664576 0.004490295\n4  0.001017816 0.002880094\n5  0.035764156 0.031614337\n6  0.035705568 0.031555607\n7  0.038238190 0.032934938\n8  0.042557024 0.035203299\n9  0.029870787 0.028210185\n10 0.038977786 0.033350285\n11 0.005127575 0.007433881\n12 0.026282152 0.025923234\n13 0.012083102 0.015032413\n14 0.005864146 0.008326447\n15 0.001269813 0.003091959\n16 0.010921099 0.013891730\n17 0.033120690 0.030072317\n18 0.006523486 0.009088952",
        "\n19 0.010695877 0.013582079\n20 0.030913478 0.028815192\n21 0.019125032 0.020890882\n22 0.020491516 0.021952446\n23 0.017764048 0.019885421\n24 0.027586367 0.026742153\n25 0.017200747 0.019455664\n26 0.006639183 0.009249805\n27 0.006315380 0.008840458\n28 0.011737081 0.014661532\n29 0.010227739 0.013205639\n30 0.015360889 0.017822703\n31 0.011197269 0.014030597\n32 0.037472904 0.032521969\n33 0.002832494 0.004678842\n34 0.037348505 0.032452252\n35 0.012541503 0.015412608\n36 0.008503195 0.011294659\n37 0.013625520 0.016336098",
        "\n38 0.028489986 0.027352251\n39 0.033032924 0.030058905\n40 0.019214871 0.020941284\n41 0.040758408 0.034269006\n42 0.020294588 0.021775755\n43 0.043232329 0.035539727\n44 0.044981222 0.036422929\n45 0.001526305 0.003321889\n46 0.014545420 0.017227861\n47 0.015416346 0.017926428\n48 0.025860584 0.025652617\n49 0.025781832 0.025606760\n50 0.028752598 0.027516670\n[1] \"prob = 0.4  modeled prob = 0.2954\"\n",
        "> ",
        "opt",
        "$par\n   log_visc    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav \n 3.07826899  0.04606417 -0.73116367 -1.13794285  0.86285013  0.86149997  0.89248679  0.94040386  0.77954696 \n   log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav \n 0.90153275 -0.28658239  0.71696075  0.29735809 -0.18948453 -1.07210250  0.23423371  0.82643147 -0.11523216 \n   log_grav    log_grav    log_grav    log_grav    log_grav    log_grav ",
        "   log_grav    log_grav    log_grav \n 0.21609219  0.79515221  0.55415738  0.59193513  0.51633011  0.74006151  0.49950051 -0.10044935 -0.13864847 \n   log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav \n 0.27743996  0.19340421  0.43151360  0.24222304  0.88336467 -0.69415495  0.88181185  0.31721273  0.06585689 \n   log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav    log_grav \n 0.36323707  0.75676034  0.82610557  0.55599941 ",
        " 0.92110002  0.58579164  0.94721447  0.96475502 -1.00586968 \n   log_grav    log_grav    log_grav    log_grav    log_grav \n 0.40498990  0.43603678  0.70914597  0.70781255  0.76118900 \n\n$objective\n[1] -186.6623\n\n$convergence\n[1] 1\n\n$iterations\n[1] 183\n\n$evaluations\nfunction gradient \n     200      183 \n\n$message\n[1] \"function evaluation limit reached without convergence (9)\"\n\n",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr,control=list(eval.max=1000,iter.max=1000))",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "         fracs       idist\n1  0.006443650 0.009203447\n2  0.008102245 0.011170368\n3  0.002664576 0.003998260\n4  0.001017816 0.001500524\n5  0.035764156 0.031561337\n6  0.035705568 0.031529725\n7  0.038238190 0.032872919\n8  0.042557024 0.035062968\n9  0.029870787 0.028235944\n10 0.038977786 0.033256554\n11 0.005127575 0.007507810\n12 0.026282152 0.026042489\n13 0.012083102 0.015274643\n14 0.005864146 0.008472369\n15 0.001269813 0.001881870\n16 0.010921099 0.014152693\n17 0.033120690 0.030107560\n18 0.006523486 0.009302299",
        "\n19 0.010695877 0.013928659\n20 0.030913478 0.028847375\n21 0.019125032 0.021144317\n22 0.020491516 0.022145108\n23 0.017764048 0.020109933\n24 0.027586367 0.026856607\n25 0.017200747 0.019669830\n26 0.006639183 0.009444773\n27 0.006315380 0.009043680\n28 0.011737081 0.014946270\n29 0.010227739 0.013455693\n30 0.015360889 0.018178038\n31 0.011197269 0.014424399\n32 0.037472904 0.032471959\n33 0.002832494 0.004249639\n34 0.037348505 0.032406389\n35 0.012541503 0.015702604\n36 0.008503195 0.011620219\n37 0.013625520 0.016684662",
        "\n38 0.028489986 0.027409025\n39 0.033032924 0.030058291\n40 0.019214871 0.021211233\n41 0.040758408 0.034165274\n42 0.020294588 0.022003067\n43 0.043232329 0.035395045\n44 0.044981222 0.036243082\n45 0.001526305 0.002271786\n46 0.014545420 0.017487590\n47 0.015416346 0.018224305\n48 0.025860584 0.025774874\n49 0.025781832 0.025724632\n50 0.028752598 0.027567865\n[1] \"prob = 0.4  modeled prob = 0.2709\"\n",
        "> ",
        "opt",
        "$par\n    log_visc     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 2.957228489  0.164308209 -0.742183298 -1.668196687  0.985299694  0.984556959  1.015398846  1.062765645 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 0.902209011  1.023948081 -0.176280969  0.841129613  0.422482175 -0.071224086 -1.450560878  0.360391149 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav ",
        "    log_grav \n 0.950247906  0.009150066  0.347334535  0.918287102  0.680889191  0.716813375  0.641693961  0.864452766 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 0.624325287  0.022150930 -0.015019932  0.404850804  0.318983991  0.562033830  0.375920002  1.006342779 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n-0.686210384  1.004849872  0.444835153  0.197385130  0.493651943  0.879830240 ",
        " 0.949026831  0.683350241 \n    log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav     log_grav \n 1.043763841  0.711827059  1.069656649  1.086929688 -1.271046265  0.531232378  0.564050754  0.833283294 \n    log_grav     log_grav \n 0.831799986  0.884187347 \n\n$objective\n[1] -422.8615\n\n$convergence\n[1] 0\n\n$iterations\n[1] 532\n\n$evaluations\nfunction gradient \n     650      533 \n\n$message\n[1] \"relative convergence (4)\"\n\n",
        "> ",
        "nareas<-3",
        "> ",
        "fracs=runif(nareas)",
        "> ",
        "fracs<-fracs/sum(fracs)",
        "> ",
        "prob=0.4",
        "> ",
        "efracs=0.1",
        "> ",
        "evisc=rep(0.1,5)",
        "> ",
        "OM=testOM",
        "> ",
        "",
        "> ",
        "data <- list(model = \"grav\",fracs = fracs, prob = prob, nareas = nareas)",
        "> ",
        "",
        "> ",
        "params <- list(log_visc = 0,log_grav = rep(0,nareas-1))",
        "> ",
        "info <- list(data = data, params = params)",
        "> ",
        "",
        "> ",
        "obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)",
        "> ",
        "opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr,control=list(eval.max=1000,iter.max=1000))",
        "> ",
        "",
        "> ",
        "testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])",
        "      fracs     idist\n1 0.4800334 0.4539381\n2 0.3713739 0.3779635\n3 0.1485927 0.1680984\n[1] \"prob = 0.4  modeled prob = 0.4589\"\n",
        "> ",
        "opt",
        "$par\n  log_visc   log_grav   log_grav \n 0.5600135 -0.1485258 -0.8421239 \n\n$objective\n[1] -33.16561\n\n$convergence\n[1] 0\n\n$iterations\n[1] 32\n\n$evaluations\nfunction gradient \n      46       33 \n\n$message\n[1] \"both X-convergence and relative convergence (5)\"\n\n",
        "> ",
        "opt$message",
        "[1] \"both X-convergence and relative convergence (5)\"\n",
        "> ",
        "obj.get <- MakeADFun(data = info$data, parameters = params.new, DLL = \"MSEtool\")",
        "Error in check.passed(parameters) : object 'params.new' not found\n",
        "> ",
        "obj.get$report()$mov",
        "Error: object 'obj.get' not found\n",
        "> ",
        "params.new <- list(log_visc=opt$par[1],log_grav=opt$par[2:nareas])",
        "> ",
        "params.new",
        "$log_visc\n log_visc \n0.5600135 \n\n$log_grav\n  log_grav   log_grav \n-0.1485258 -0.8421239 \n\n",
        "> ",
        "obj.get <- MakeADFun(data = info$data, parameters = params.new, DLL = \"MSEtool\")",
        "> ",
        "obj.get$report()$mov",
        "          [,1]      [,2]      [,3]\n[1,] 0.5752306 0.2832222 0.1415472\n[2,] 0.3660896 0.4762010 0.1577094\n[3,] 0.4572727 0.3941589 0.1485684\n",
        "> ",
        "log_grav=opt$par[2:nareas]",
        "> ",
        "log_visc=opt$par[1]",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "    grav<-array(NA,c(nareas,nareas))",
        "> ",
        "    grav[,1]<-0",
        "> ",
        "    for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "> ",
        "    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "> ",
        "    mov<-exp(grav)",
        "> ",
        "    mov<-mov/apply(mov,1,sum)",
        "> ",
        "mov",
        "          [,1]      [,2]      [,3]\n[1,] 0.5752306 0.2832222 0.1415472\n[2,] 0.3401527 0.5133113 0.1465360\n[3,] 0.3822384 0.3294810 0.2882806\n",
        "> ",
        "log_grav=opt$par[2:nareas]",
        "> ",
        "log_visc=opt$par[1]",
        "> ",
        "nareas<-length(fracs)",
        "> ",
        "    grav<-array(NA,c(nareas,nareas))",
        "> ",
        "    grav[,1]<-0",
        "> ",
        "    for(at in 2:nareas)grav[,at]<-log_grav[at-1]",
        "> ",
        "    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc",
        "> ",
        "    mov<-exp(grav)",
        "> ",
        "    mov<-mov/apply(mov,1,sum)",
        "> ",
        "    idist<-rep(1/nareas,nareas)",
        "> ",
        "    for(i in 1:50)idist<-apply(idist*mov,2,sum)",
        "> ",
        "mov",
        "          [,1]      [,2]      [,3]\n[1,] 0.5752306 0.2832222 0.1415472\n[2,] 0.3401527 0.5133113 0.1465360\n[3,] 0.3822384 0.3294810 0.2882806\n\nRestarting R session...\n\n"
    ],
    "type" : [
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        3,
        0,
        1,
        3,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ]
}