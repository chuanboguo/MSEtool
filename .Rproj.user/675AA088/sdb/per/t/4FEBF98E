{
    "collab_server" : "",
    "contents" : "\n//template<class Type>\n//Type objective_function<Type>::operator() ()\n//{\n  using namespace density;\n\n  DATA_VECTOR( fracs );\n  DATA_SCALAR( muprob );\n  DATA_INTEGER( nareas );\n\n  PARAMETER_VECTOR( log_grav );\n  PARAMETER( log_visc );\n\n  vector<Type> log_grav_p = log_grav; // this is a vector, not sure what will happen here\n  Type log_visc_p = log_visc;\n  Type gsum;\n  Type psum;\n  Type sigma;\n  Type obj;\n\n  // -- Declarations\n  matrix<Type> grav(nareas,nareas);\n  matrix<Type> mov(nareas,nareas);\n  matrix<Type> transN(nareas,nareas);\n  vector<Type> idist(nareas);\n\n  // Map out gravity terms accounting for viscosity, gravity of area 1 is fixed to zero\n  for(int af=1; af<nareas; af++){ // area from\n    grav(af,1) = 0;\n    for(int at=2; af<nareas; af++){ // area to\n      grav(af,at) = log_grav_p(at-1);\n    }\n    grav(af,af)+=grav(af,af)+log_visc_p; // add viscosity\n  }\n\n  // Calculate logit fractions (movement to area from area)\n  for(int af=1; af<nareas; af++){\n    gsum=0.0;\n    for(int at=1; af<nareas; af++){\n      gsum+=exp(grav(af,at)); // sum up gravity terms\n    }\n    for(int at=1; af<nareas; af++){\n      mov(af,at)+=exp(grav(af,at))/gsum; // calculate logit mov probs by row (area from)\n    }\n  }\n\n  // Run a convergence to a stable distribution\n  for(int af=1; af<nareas; af++){\n    idist(af)=1.0/nareas;\n  }\n\n  for(int tt =1; tt<20; tt++){\n    for(int af=1; af<nareas; af++){\n      for(int at=1; at<nareas; at++){\n        transN(af,at)=idist(af)*mov(af,at);\n      }\n    }\n    for(int at=1; at<nareas; at++){\n      gsum=0.0;\n      for(int af=1; af<nareas; af++){\n        gsum+=transN(af,at);\n      }\n      idist(at)=gsum;\n    }\n  }\n\n  psum=0.0;\n  for(int aa=1; aa<nareas; aa++){\n    psum+=mov(aa,aa)/nareas;\n  }\n\n  sigma = 0.1000;\n\n  gsum=0.0;\n  for(int aa=1; aa<nareas; aa++){\n    gsum-=dnorm(log(idist(aa)), log(fracs(aa)), sigma, true);\n  }\n\n  gsum-=dnorm(log(psum), log(muprob), sigma, true);\n\n  obj = gsum;\n\n  //-------REPORTING-------//\n  ADREPORT( log_grav_p );\n  ADREPORT( log_visc_p );\n  REPORT( idist );\n  REPORT( transN );\n\n  return obj;\n//}\n",
    "created" : 1519840478377.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2291960472",
    "id" : "4FEBF98E",
    "lastKnownWriteTime" : 1519857197,
    "last_content_update" : 1519857197816,
    "path" : "C:/GitHub/MSE/inst/include/grav.h",
    "project_path" : "inst/include/grav.h",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "h"
}