{
    "collab_server" : "",
    "contents" : "\n//template<class Type>\n//Type objective_function<Type>::operator() ()\n//{\n  using namespace density;\n\n  DATA_VECTOR( fracs );\n  DATA_VECTOR( prob );\n  DATA_INTEGER( nareas );\n\n  PARAMETER_VECTOR( log_visc );\n  PARAMETER_VECTOR( log_grav );\n\n  Type sigma = Type(0);\n  sigma=0.1;\n\n  // -- Declarations\n  matrix<Type> grav(nareas,nareas);\n  matrix<Type> mov(nareas,nareas);\n  matrix<Type> transN(nareas,nareas);\n  vector<Type> idist(nareas);\n  vector<Type> tdist(nareas);\n  vector<Type> gsum(nareas);\n  vector<Type> Nsum(nareas);\n\n  // Zero inits\n  grav.setZero();\n  mov.setZero();\n  idist.setZero();\n  tdist.setZero();\n  gsum.setZero();\n  Nsum.setZero();\n  transN.setZero();\n\n  // Map out gravity terms accounting for viscosity, gravity of area 1 is fixed to zero\n  for(int af=0; af<nareas; af++){ // area from\n    for(int at=1; at<nareas; at++){ // area to\n      grav(af,at) = log_grav(at-1);\n    }\n  }\n  for(int af=0; af<nareas; af++){\n    grav(af,af)+=log_visc(af);\n  }\n\n  // Calculate logit fractions (movement to area from area)\n  for(int af=0; af<nareas; af++){\n\n    for(int at=0; at<nareas; at++){\n      gsum(af)+=exp(grav(af,at)); // sum up gravity terms by from area\n    }\n\n    for(int at=0; at<nareas; at++){\n      mov(af,at)=exp(grav(af,at))/gsum(af); // calculate logit mov probs by row (area from)\n    }\n\n  }\n\n  //std::cout<<mov<<std::endl;\n  // Run a convergence to a stable distribution\n  for(int af=0; af<nareas; af++){\n    idist(af)=1.0/nareas;\n  }\n\n  for(int tt =0; tt<50; tt++){\n     //tdist=idist*mov;\n     //idist=tdist;\n    for(int af=0; af<nareas; af++){\n      for(int at=0; at<nareas; at++){\n        transN(af,at)=idist(af)*mov(af,at);\n      }\n    }\n\n    Nsum.setZero();\n\n    for(int at=0; at<nareas; at++){\n      for(int af=0; af<nareas; af++){\n        Nsum(at)+=transN(af,at);\n      }\n      idist(at)=Nsum(at);\n    }\n\n  }\n\n  Type nll = Type(0);\n  for(int aa=0; aa<nareas; aa++){\n    nll-=dnorm(idist(aa), fracs(aa), sigma, true);\n    nll-=dnorm(mov(aa,aa),prob(aa),sigma,true);\n  }\n\n  //-------REPORTING-------//\n  ADREPORT( log_grav );\n  ADREPORT( log_visc );\n  REPORT( idist );\n  REPORT( transN );\n  REPORT( grav );\n  REPORT( mov );\n  REPORT( grav );\n\n  return nll;\n\n//}\n",
    "created" : 1519840478377.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3380141440",
    "id" : "4FEBF98E",
    "lastKnownWriteTime" : 1519941905,
    "last_content_update" : 1519941905895,
    "path" : "C:/GitHub/MSEtool/inst/include/grav_Pbyarea.h",
    "project_path" : "inst/include/grav_Pbyarea.h",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "h"
}