{
    "collab_server" : "",
    "contents" : "# =============================================================================================================================\n# === Movement matrix calculation functions ===================================================================================\n# =============================================================================================================================\n\n# These functions are intended to population the movement matrix in the custom\n# parameter slot of a DLMtool / MSEtool operating model\n#\n# cpars@mov[nsim,nages,nareas,nareas]\n\n\n#' Simulates movement matrices from user inputs for use in DLMtool and MSEtool testing\n#'\n#' @description Movement matrices are generated based on uncertainties in spatial distribution and viscosity determined by users,\n#' @param fracs A vector nareas long of fractions of unfished stock biomass in each area\n#' @param prob A number (mean probability) or vector (by area) of the probability of individuals staying in each area\n#' @param distE Normal error (St.Dev.) of distribution fractions (dist) in logit space.\n#' @param probE Normal error (St.Dev.) of probability of staying, in logit space.\n#' @param prob2 Alternative upper bound on area-specific probability of staying\n#' @author T. Carruthers\n#' @export simmov\n#' @import TMB\n#' @importFrom stats nlminb\n#' @importFrom mvtnorm rmvnorm\n#' @useDynLib MSEtool\nsimmov<-function(OM,dist=c(0.1,0.2,0.3,0.4),prob=0.6,distE=0.1,probE=0.1,prob2=NA){\n\n  logit<-function(p)log(p/(1-p))\n  ilogit<-function(x)exp(x)/(1+exp(x))\n\n  nsim<-OM@nsim\n  nareas<-length(dist)\n  maxage<-OM@maxage\n  mov<-array(NA,c(nsim,maxage,nareas,nareas))\n\n  cond1<-length(prob)==1&is.na(prob2[1])\n  cond2<-length(prob)==nareas&is.na(prob2[1])\n  cond3<-length(prob)==nareas&!is.na(prob2[1])&length(prob2)==nareas\n  cond4<-length(prob)!=nareas&length(prob)>1\n  cond5<-length(prob)==nareas&!is.na(prob2[1])&length(prob2)<nareas\n  cond6<-length(prob)==1&!is.na(prob2[1])&length(prob2)==1\n\n  if(cond1) message(paste(\"Simulating mean probability of staying among all areas (p =\",prob,\") subject to logit error (e =\",probE,\")\"))\n  if(cond2) message(paste(\"Simulating probability of staying by area, subject to logit error (e =\",probE,\")\"))\n  if(cond3) message(paste(\"Simulating probabiltiy of staying by area in a uniform range between prob and prob2\"))\n  if(cond4) stop(paste(\"Probability can be specified as either single number (mean probability among all areas), or it can be specifed by area in a vector the same length as dist. You specified dist as a vector of\",length(dist),\"elements and prob as a vector of\",length(prob),\"elements\"))\n  if(cond5) stop(paste(\"Prob and Prob 2 must be the same length (nareas the same as dist) to do the unform sampling by area. You specified dist as a vector of\",length(prob),\"elements for prob and a vector of \",length(prob2),\"elements for prob2\"))\n  if(cond6) message(paste(\"Simulating mean probability of staying among all areas as a uniform random variable between\",prob,\"and\",prob2))\n\n  if(cond1)prob_s<-ilogit(rnorm(nsim,logit(prob),probE))\n  if(cond2)prob_s<-ilogit(t(matrix(rnorm(nsim*nareas,logit(prob),probE),nrow=nareas)))\n  if(cond3)prob_s<-t(matrix(runif(nsim*nareas,prob,prob2),nrow=nareas))\n  if(cond6)prob_s<-t(matrix(runif(nsim,prob,prob2),nrow=nareas))\n\n  dist_s<-ilogit(t(matrix(rnorm(nsim*nareas,logit(dist),distE),nrow=nareas)))\n\n  for(i in 1:nsim){\n\n    if(cond1|cond6)movest<-makemov(fracs=dist_s[i,],prob=prob_s[i],verbose=F)\n    if(cond2|cond3)movest<-makemov(fracs=dist_s[i,],prob=prob_s[i,],verbose=F)\n\n    mov[i,,,]<-rep(movest,each=maxage)\n\n  }\n\n  OM@cpars$mov=mov\n  OM\n}\n\n# test<-simmov(testOM,dist=c(0.01,0.1,0.2,0.3,0.4,0.09),prob=0.7)\n# test<-simmov(testOM,dist=c(0.01,0.1,0.2,0.3,0.4,0.09),prob=c(0.5,0.6,0.7,0.8,0.9,0.95))\n# test<-simmov(testOM,dist=c(0.01,0.1,0.2,0.3,0.4,0.09),prob=c(0.5,0.6,0.7,0.8,0.9,0.95),prob2=c(0.5,0.6,0.7,0.8,0.9,0.95)+0.01)\n\n\n#' Calculates movement matrices from user inputs\n#'\n#' @description A function for calculating a movement matrix from user specified unfished stock biomass fraction in each area\n#' @param fracs A vector nareas long of fractions of unfished stock biomass in each area\n#' @param prob A number (mean probability) or vector (by area) of the probability of individuals staying in each area\n#' @param verbose Logical. Do you want to see additional error messages\n#' @author T. Carruthers\n#' @export makemov\n#' @import TMB\n#' @importFrom stats nlminb\n#' @importFrom mvtnorm rmvnorm\n#' @useDynLib MSEtool\nmakemov<-function(fracs=c(0.1,0.2,0.3,0.4),prob=0.5,verbose=T){\n\n  nareas<-length(fracs)\n  if(verbose)message(paste(\"Movement model for\",nareas,\"areas to be calculated from gravity model assumptions\"))\n\n  if(length(prob)==1){\n    data <- list(model = \"grav\",fracs = fracs, prob = prob, nareas = nareas)\n    if(verbose)message(paste(\"User-specified mean probability of staying in each area =\",prob))\n  }else if(length(prob==nareas)){\n    data <- list(model = \"grav_Pbyarea\",fracs = fracs, prob = prob, nareas = nareas)\n    if(verbose)message(\"User-specified probability of staying for each area\")\n  }else{\n    stop(paste(\"You must either specify the mean probability of staying in each area (prob is length 1) or\n         you must specify a vector of probabilities of staying for each area (prob is the same length as fracs).\n         you specified prob of length\",length(prob),\"and fracs of length\",length(fracs)))\n  }\n  if(length(prob)==1)params <- list(log_visc = 0,log_grav = rep(0,nareas-1))\n  if(length(prob)==nareas)params <- list(log_visc = rep(0,nareas),log_grav = rep(0,nareas-1))\n\n  info <- list(data = data, params = params)\n\n  obj <- MakeADFun(data = info$data, parameters = info$params, DLL = \"MSEtool\", silent = TRUE)\n  opt <- nlminb(start = obj$par, objective = obj$fn, gradient = obj$gr,control=list(eval.max=1000,iter.max=1000))\n\n  if(length(prob)==1)params.new <- list(log_visc=opt$par[1],log_grav=opt$par[2:nareas])\n  if(length(prob)==nareas)params.new<-list(log_visc=opt$par[1:nareas],log_grav=opt$par[nareas+(1:(nareas-1))])\n\n  obj.get <- MakeADFun(data = info$data, parameters = params.new, DLL = \"MSEtool\")\n  obj.get$report()$mov\n\n  #testgravpars(fracs,prob,log_grav=opt$par[2:nareas],log_visc=opt$par[1])\n\n}\n\n#' Check TMB movement model characterization against R code\n#'\n#' @description A way of double checking TMB is working as intended\n#' @param fracs A vector nareas long of desired fractions of unfished stock biomass in each area\n#' @param prob A number (mean probability) or vector (by area) of the probability of individuals staying in each area\n#' @param log_grav Gravity parameters\n#' @param log_visc Viscosity parameter(s)\n#' @author T. Carruthers\n#' @export testgravpars\n#' @import TMB\n#' @importFrom stats nlminb\n#' @importFrom mvtnorm rmvnorm\n#' @useDynLib MSEtool\ntestgravpars<-function(fracs,prob,log_grav,log_visc){\n\n  nareas<-length(fracs)\n\n  if(length(prob)==1){ # if the user is specifying mean probability of staying\n\n    grav<-array(NA,c(nareas,nareas))\n    grav[,1]<-0\n    for(at in 2:nareas)grav[,at]<-log_grav[at-1]\n    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc\n    mov<-exp(grav)\n    mov<-mov/apply(mov,1,sum)\n    idist<-rep(1/nareas,nareas)\n    for(i in 1:50)idist<-apply(idist*mov,2,sum)\n\n    print(data.frame(fracs=fracs,idist=idist))\n    print(paste(\"prob =\",prob,\" modeled prob =\",round(mean(mov[cbind(1:nareas,1:nareas)]),4)))\n\n  }else if(length(prob)==nareas){\n\n    grav<-array(NA,c(nareas,nareas))\n    grav[,1]<-0\n    for(at in 2:nareas)grav[,at]<-log_grav[at-1]\n    for(aa in 1:nareas)grav[aa,aa]<-grav[aa,aa]+log_visc[aa]\n    mov<-exp(grav)\n    mov<-mov/apply(mov,1,sum)\n    idist<-rep(1/nareas,nareas)\n    for(i in 1:50)idist<-apply(idist*mov,2,sum)\n\n    print(data.frame(fracs=fracs,idist=idist))\n    print(data.frame(prob=prob,mod_prob=round(mov[cbind(1:nareas,1:nareas)],4)))\n\n  }\n\n}\n\n# ===============================================================================================================\n\n\n",
    "created" : 1519838648482.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "803127703",
    "id" : "32FB8FB",
    "lastKnownWriteTime" : 1519946659,
    "last_content_update" : 1519946659680,
    "path" : "C:/GitHub/MSEtool/R/Movement_calcs.R",
    "project_path" : "R/Movement_calcs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}